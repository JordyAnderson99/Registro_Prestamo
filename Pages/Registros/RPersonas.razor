@page "/Personas"
@page "/Personas/{PersonaId:int}"

@using RegistroPrestamo.Models;
@using RegistroPrestamo.BLL;
@inject IToastService toast

<EditForm Model="personas" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header">
            <h1>Registro de Personas</h1>
        </div>
        @*PersonaID y boton al lado*@
    <div class="card-body">
        <form />
        <div class="form-row align-items-center">
            <div class="col">
                <div class="form-group">
                    <label>PersonaId</label>
                    <div class="input-group">
                        <InputNumber @bind-Value="personas.PersonaId" class="form-control col-4" />
                        <div class="input-group-append">
                            <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar">
                                <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor" class="bi bi-search" viewBox="0 0 20 20">
                                    <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z" />
                                </svg> Buscar
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @*Nombres*@
        <div class="form-group">
            <label>Nombres</label>
            <InputText @bind-Value="personas.Nombres" class="form-control" />
            <ValidationMessage For="@(() => personas.Nombres)" />
        </div>

        @*Telefono*@
        <div class="form-group">
            <label>Telefono</label>
            <InputText @bind-Value="personas.Telefono" class="form-control" />
            <ValidationMessage For="@(() => personas.Telefono)" />
        </div>

        @*Cedula*@
        <div class="form-group">
            <label>Cedula</label>
            <InputText @bind-Value="personas.Cedula" class="form-control" />
            <ValidationMessage For="@(() => personas.Cedula)" />
        </div>

        @*Dirección*@
        <div class="form-group">
            <label>Dirección</label>
            <InputText @bind-Value="personas.Direccion" class="form-control" />
            <ValidationMessage For="@(() => personas.Direccion)" />
        </div>

        @*Fecha de Nacimiento*@
        <div class="form-group">
            <label>Fecha de Nacimiento</label>
            <InputDate @bind-Value="personas.FechaNacimiento" class="form-control" />
            <ValidationMessage For="@(() => personas.FechaNacimiento)" />
        </div>

        @*Balance*@
        <div class="form-group">
            <label>Balance</label>
            <InputNumber @bind-Value="personas.Balance" class="form-control " readonly="true" />
            <ValidationMessage For="@(() => personas.Balance)" />
        </div>
    </div>

        @*Botones*@
        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                @* Boton Nuevo*@
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">
                    <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-file-earmark-plus" viewBox="0 0 20 20">
                        <path d="M8 6.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V11a.5.5 0 0 1-1 0V9.5H6a.5.5 0 0 1 0-1h1.5V7a.5.5 0 0 1 .5-.5z" />
                        <path d="M14 4.5V14a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h5.5L14 4.5zm-3 0A1.5 1.5 0 0 1 9.5 3V1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V4.5h-2z" />
                    </svg>Nuevo
                </button>
                @* Boton Guardar*@
                <button type="submit" class="btn btn-lg btn-success">
                    <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-file-earmark-check" viewBox="0 0 20 20">
                        <path d="M10.854 7.854a.5.5 0 0 0-.708-.708L7.5 9.793 6.354 8.646a.5.5 0 1 0-.708.708l1.5 1.5a.5.5 0 0 0 .708 0l3-3z" />
                        <path d="M14 14V4.5L9.5 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2zM9.5 3A1.5 1.5 0 0 0 11 4.5h2V14a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h5.5v2z" />
                    </svg>Guardar
                </button>


                @* Boton Eliminar*@
                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">
                    <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-trash" viewBox="0 0 20 20">
                        <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z" />
                        <path fill-rule="evenodd" d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z" />
                    </svg>Eliminar
                </button>
            </div>
        </div>
    </div>
</EditForm>

@code
{
    [Parameter]
    public int PersonaId { get; set; }

    private Personas personas = new Personas();

    protected override void OnInitialized()
    {
        Nuevo();
        Buscar();
    }

    public void Nuevo()
    {
        personas = new Personas();
    }


    private void Buscar()
    {
        if (personas.PersonaId > 0)
        {
            var encontrado = PersonasBLL.Buscar(personas.PersonaId);

            if (encontrado != null)
                this.personas = encontrado;
            else
                toast.ShowWarning("No encontrado");
        }
    }

    public void Guardar()
    {
        bool guardo;

        guardo = PersonasBLL.Guardar(personas);

        if (guardo)
        {
            Nuevo();
            toast.ShowSuccess("Guardado correctamente");
        }
        else
            toast.ShowError("No fue posible guardar");
    }

    public void Eliminar()
    {
        bool elimino;

        elimino = PersonasBLL.Eliminar(personas.PersonaId);

        if (elimino)
        {
            Nuevo();
            toast.ShowSuccess("Eliminado correctamente");
        }
        else
            toast.ShowError("No fue posible eliminar");
    }
}
